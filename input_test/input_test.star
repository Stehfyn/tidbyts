load("render.star", "render")
load('html.star', 'html')
load("http.star", "http")
load("encoding/base64.star", "base64")
load("cache.star", "cache")

LOCALHOST_IP = "192.168.56.1"
PORT = "8081"

saturn=base64.decode("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")
ss=base64.decode("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")

def get_render_image(image):
    return render.Root(
        child = render.Box(
                render.Row(
                expanded=False,
                main_align="space_evenly",
                cross_align="center",
                children = [
                    render.Image(src=image),
                ],
            ),
        ),
    )

def main():
    rep = http.get("http://" + LOCALHOST_IP + ":" + PORT)
    resp = html(rep.body())
    input = resp.find("#A").text()
    print(input)

    image = ss
    if input == '1':
        image = saturn

    return get_render_image(image)
